{"./":{"url":"./","title":"操作指南","keywords":"","body":"操作指南 本书是一本GitBook功能的实践项目，方便测试相关功能与插件。项目完全开源，需要请自取。 工具安装 $: npm i gitbook-cli -g 快速开始 # 样例项目 $: mkdir sample; cd sample # 初始化目录 $: gitbook init # 安装依赖 $: gitbook install # 本地服务 $: gitbook serve # 打包 $: gitbook build 项目下载 本项目地址: github.com/liujianping/gitbook.可直接下载测试。 $: git clone https://github.com/liujianping/gitbook.git $: cd guide $: gitbook install $: gitbook serve var gitalk = new Gitalk({ clientID: '381ef6e29bdffb9ad797', clientSecret: '558305235c247d8766aa9d051cfce259818c0b85', repo: 'website', owner: 'gitdigg', admin: ['liujianping'], id: location.pathname, // Ensure uniqueness and length less than 50 distractionFreeMode: false // Facebook-like distraction free mode }) gitalk.render('gitalk-container') GitDiG.com @2019 all right reserved，powered by Gitbook本文修订时间: 2019-08-02 07:56:21 "},"basic/directory.html":{"url":"basic/directory.html","title":"1.1 目录操作","keywords":"","body":"1.1 目录操作 在GitBook项目根目录下，创建具体目录如本项目:basic目录。编辑SUMMARY.md文件进行文件目录的关联。参考内容如下: * [快速开始](README.md) * 第一章 基本操作 * [1.1 目录操作](basic/directory.md) * [1.2 文件操作](basic/file.md) 对应的在basic目录创建:basic/directory.md与basic/file.md就可以实现目录与文件的关联。 GitDiG.com @2019 all right reserved，powered by Gitbook本文修订时间: 2019-08-01 17:33:30 "},"basic/file.html":{"url":"basic/file.html","title":"1.2 文件操作","keywords":"","body":"1.2 文件操作 文件具体操作，就是Markdown格式的内容编辑。如本文: # 1.2 文件操作 文件具体操作，就是`Markdown`格式的内容编辑。 GitDiG.com @2019 all right reserved，powered by Gitbook本文修订时间: 2019-08-01 17:07:48 "},"config/book.html":{"url":"config/book.html","title":"2.1 基础配置","keywords":"","body":"2.1 配置文件 默认情况下，初始化后的GitBook项目配置文件没有提供配置文件，需要进行手工创建。在项目根目录下，创建book.json或者名为book.js的配置文件。如下: $: cat book.json { \"title\": \"GitBook 操作指南\", \"author\": \"JayL\", \"description\": \"GitBook 边实践边记录的结果\", \"language\": \"zh-Hans\", \"links\": { \"sharing\": { \"all\": null, \"facebook\": null, \"google\": null, \"twitter\": null, \"weibo\": null }, \"sidebar\": { \"GitDiG.com\": \"https://gitdig.com\" } }, \"styles\": {}, \"plugins\": [], \"pluginsConfig\": { } } EOF 首先增加基础项目信息。从配置可以看出，还可以进行样式与功能插件的配置。 GitDiG.com @2019 all right reserved，powered by Gitbook本文修订时间: 2019-08-01 18:07:11 "},"config/style.html":{"url":"config/style.html","title":"2.2 主题样式","keywords":"","body":"2.2 主题样式 GitBook默认的主题样式已经非常好了，如果需要进行微调的化，可以增加样式表对指定样式进行覆盖。（不是专业前端，这么理解吧）。 可以进行调整的样式分别是以下几种模式下的样式，以下参考配置项： { ... \"styles\": { \"website\": \"styles/website.css\", \"ebook\": \"styles/ebook.css\", \"pdf\": \"styles/pdf.css\", \"mobi\": \"styles/mobi.css\", \"epub\": \"styles/epub.css\" }, ... } 当然这些配置，如上配置的话，需要在项目目录中创建相应的样式文件，并定义相应的样式。以website样式为例： $: mkdir styles $: cat styles/website.css h1 , h2{ border-bottom: 1px solid #EFEAEA; } EOF 给标签,增加下划线样式。 GitDiG.com @2019 all right reserved，powered by Gitbook本文修订时间: 2019-08-01 23:07:07 "},"config/plugin.html":{"url":"config/plugin.html","title":"2.3 功能插件","keywords":"","body":"2.3 功能插件 这篇文章挺全的：GitBook 插件。 加两个简单插件，修改book.json文件相关配置块: { ... \"plugins\": [ \"copy-code-button\", \"tbfed-pagefooter\" ], \"pluginsConfig\": { \"tbfed-pagefooter\": { \"copyright\": \"GitDiG.com @2019\", \"modify_label\": \"本文修订时间:\", \"modify_format\": \"YYYY-MM-DD HH:mm:ss\" } } ... } 增加新插件，需要执行插件安装命令: $: gitbook install 再重新启动本地服务，查看效果。 GitDiG.com @2019 all right reserved，powered by Gitbook本文修订时间: 2019-08-01 23:16:52 "},"plugin/toc.html":{"url":"plugin/toc.html","title":"插件: page-toc-button","keywords":"","body":"插件: page-toc-button 配置 { ... \"plugins\": [ \"page-toc-button\", ], \"pluginsConfig\": { \"page-toc-button\": { \"maxTocDepth\": 2, \"minTocSize\": 2 } } ... } 展示 点击右侧按钮，进行展示。 1. 目录 2. 目录 GitDiG.com @2019 all right reserved，powered by Gitbook本文修订时间: 2019-08-01 20:28:43 "},"plugin/alert.html":{"url":"plugin/alert.html","title":"插件: alert","keywords":"","body":"插件: alert 配置 { ... \"plugins\": [ \"alerts\", ], ... } Markdown Info > **[info] For info** > > Use this for infomation messages. [info] For info Use this for infomation messages. warning > **[warning] For warning** > > Use this for infomation messages. [warning] For warning Use this for infomation messages. danger > **[danger] For danger** > > Use this for infomation messages. [danger] For danger Use this for infomation messages. success > **[success] For success** > > Use this for infomation messages. [success] For success Use this for infomation messages. GitDiG.com @2019 all right reserved，powered by Gitbook本文修订时间: 2019-08-01 20:29:04 "},"plugin/todo.html":{"url":"plugin/todo.html","title":"插件: todo","keywords":"","body":"插件： todo - [x] todo 1 - [x] todo 2 - [ ] todo 3 [x] todo 1 [x] todo 2 [ ] todo 3 GitDiG.com @2019 all right reserved，powered by Gitbook本文修订时间: 2019-08-01 23:29:36 "},"plugin/gitalk.html":{"url":"plugin/gitalk.html","title":"评论: gitalk","keywords":"","body":"评论: gitalk 此页留给大家评论，顺便测试gitalk的功能。直接再需要提供评论的内容中增加以下代码: var gitalk = new Gitalk({ clientID: 'YOUR clientID', clientSecret: 'YOUR clientSecret', repo: 'YOUR repo', owner: 'YOUR owner', admin: ['YOUR admin'], id: location.pathname, // Ensure uniqueness and length less than 50 distractionFreeMode: false // Facebook-like distraction free mode }) gitalk.render('gitalk-container') 评论区 var gitalk = new Gitalk({ clientID: '381ef6e29bdffb9ad797', clientSecret: '558305235c247d8766aa9d051cfce259818c0b85', repo: 'website', owner: 'gitdigg', admin: ['liujianping'], id: location.pathname, // Ensure uniqueness and length less than 50 distractionFreeMode: false // Facebook-like distraction free mode }) gitalk.render('gitalk-container') GitDiG.com @2019 all right reserved，powered by Gitbook本文修订时间: 2019-08-01 20:19:59 "},"deploy/website.html":{"url":"deploy/website.html","title":"4.1 网站","keywords":"","body":"网站 生成 # 项目根目录 $: cd [gitbook/project/dir] # 生成到指定目录 $: gitbook build . [dest/path] 发布 纯HTML文件发布即可。 GitDiG.com @2019 all right reserved，powered by Gitbook本文修订时间: 2019-08-01 23:34:19 "}}